{"version":3,"sources":["assets/Logo.png","screens/LoginScreen.js","Fire.js","screens/ChatScreen.js","App.js"],"names":["module","exports","LoginScreen","state","name","continue","props","navigation","navigate","View","style","styles","container","circle","Image","source","Logo","width","height","alignSelf","marginHorizontal","Text","header","TextInput","input","placeholder","onChangeText","setState","value","this","marginTop","alignItems","TouchableOpacity","onPress","AntDesign","size","color","Component","StyleSheet","create","flex","backgroundColor","fontWeight","fontSize","marginBottom","borderWidth","hairlineWidth","borderColor","borderRadius","paddingHorizontal","justifyContent","init","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","checkAuth","auth","onAuthStateChanged","user","signInAnonymously","send","messages","forEach","item","message","text","timestamp","database","ServerValue","TIMESTAMP","db","push","parse","val","_id","key","createdAt","Date","get","callback","on","snapshot","off","ref","currentUser","uid","ChatScreen","Fire","previous","GiftedChat","append","chat","onSend","Platform","OS","KeyboardAvoidingView","behavior","keyboardVerticalOffset","enabled","SafeAreaView","params","React","appNavigator","createStackNavigator","Login","Chat","headerMode","createAppContainer"],"mappings":"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","file":"static/js/app.1b20788a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.afca27bc.png\";","import React, { Component } from \"react\";\nimport Logo from \"../assets/Logo.png\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\n\nexport default class LoginScreen extends Component {\n  state = {\n    name: \"\"\n  };\n\n  continue = () => {\n    this.props.navigation.navigate(\"Chat\", { name: this.state.name});\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.circle} />\n        <View>\n          <Image\n            source={Logo}\n            style={{ width: \"40%\", height: \"40%\", alignSelf: \"center\" }}\n          />\n        </View>\n        <View style={{ marginHorizontal: 32 }}>\n          <Text style={styles.header}>Username</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Username\"\n            onChangeText={(name) => this.setState({ name })}\n            value={this.state.name}\n          />\n        </View>\n\n        <View style={{ marginTop: 28, alignItems: \"flex-end\" }}>\n          <TouchableOpacity style={styles.continue} onPress={this.continue}>\n            <AntDesign name=\"arrowright\" size={24} color=\"black\" />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#0A0A0A\",\n  },\n\n  header: {\n    fontWeight: \"800\",\n    fontSize: 26,\n    color: \"white\",\n    marginTop: 2,\n    marginBottom: 15,\n  },\n\n  input: {\n    marginTop: 2,\n    borderWidth: StyleSheet.hairlineWidth,\n    height: 50,\n    marginBottom: 15,\n    borderColor: \"white\",\n    borderRadius: 30,\n    paddingHorizontal: 16,\n    fontWeight: \"600\",\n    color: \"white\",\n  },\n\n  continue: {\n    height: 50,\n    width: 50,\n    borderRadius: 50 / 2,\n    marginHorizontal: 32,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"white\",\n  },\n});\n","import firebase from \"firebase\";\n\nclass Fire {\n    constructor() {\n        this.init();\n        this.checkAuth();\n    }\n\n    init = () => {\n        if (!firebase.apps.length) {\n            firebase.initializeApp({\n                apiKey: \"AIzaSyBwlr3EY8OqUUrRJEWyPt3JCDEkwpzud3Q\",\n                authDomain: \"agora-617f9.firebaseapp.com\",\n                databaseURL: \"https://agora-617f9.firebaseio.com\",\n                projectId: \"agora-617f9\",\n                storageBucket: \"agora-617f9.appspot.com\",\n                messagingSenderId: \"431650525851\",\n                appId: \"1:431650525851:web:4187b924e22d2e4a632c3e\",\n                measurementId: \"G-E02XVLGM2T\",\n              });\n        }\n    };\n\n    checkAuth = () => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (!user) {\n                firebase.auth().signInAnonymously();\n            }\n        });\n    };\n\n    send = messages => {\n        messages.forEach(item => {\n            const message = {\n                text: item.text,\n                timestamp: firebase.database.ServerValue.TIMESTAMP,\n                user: item.user\n            };\n\n            this.db.push(message);\n        });\n    };\n\n    parse = message => {\n        const { user, text, timestamp } = message.val();\n        const { key: _id } = message;\n        const createdAt = new Date(timestamp);\n\n        return {\n            _id,\n            createdAt,\n            text,\n            user\n        };\n    };\n\n    get = callback => {\n        this.db.on(\"child_added\", snapshot => callback(this.parse(snapshot)));\n    };\n\n    off() {\n        this.db.off();\n    }\n\n    get db() {\n        return firebase.database().ref(\"messages\");\n    }\n\n    get uid() {\n        return (firebase.auth().currentUser || {}).uid;\n    }\n}\n\nexport default new Fire();\n","import React from \"react\";\nimport { Platform, KeyboardAvoidingView, SafeAreaView } from \"react-native\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport Fire from \"../Fire\";\n\nexport default class ChatScreen extends React.Component {\n    state = {\n        messages: []\n    };\n\n    get user() {\n        return {\n            _id: Fire.uid,\n            name: this.props.navigation.state.params.name\n        };\n    }\n\n    componentDidMount() {\n        Fire.get(message =>\n            this.setState(previous => ({\n                messages: GiftedChat.append(previous.messages, message)\n            }))\n        );\n    }\n\n    componentWillUnmount() {\n        Fire.off();\n    }\n\n    render() {\n        const chat = <GiftedChat messages={this.state.messages} onSend={Fire.send} user={this.user} />;\n\n        if (Platform.OS === \"android\") {\n            return (\n                <KeyboardAvoidingView style={{ flex: 1 }} behavior=\"padding\" keyboardVerticalOffset={30} enabled>\n                    {chat}\n                </KeyboardAvoidingView>\n            );\n        }\n\n        return <SafeAreaView style={{ flex: 1 }}>{chat}</SafeAreaView>;\n    }\n}\n","import { createAppContainer } from \"react-navigation\";\nimport { createStackNavigator } from \"react-navigation-stack\";\n\nimport LoginScreen from \"./screens/LoginScreen\";\nimport ChatScreen from \"./screens/ChatScreen.js\";\n\nconst appNavigator = createStackNavigator(\n  {\n    Login: LoginScreen,\n    Chat: ChatScreen,\n  },\n  {\n    headerMode: \"none\",\n  }\n);\n\nexport default createAppContainer(appNavigator);\n"],"sourceRoot":""}